type NestedObject = { "this is": character, prop2: int, "prop3": boolean };
type Object = { prop1: float, "nested": int };

let var1: Object, var2, var3;
var1 = {
    prop1: 10e-1,
    nested: 23};

var2 = 10;

// This is a function

function gte(a: int, b: int): boolean {
    return a > b;
}

/*
 * we can access object properties using dot notation (sometimes) or,
 * we can also use the bracket notation (always)

*/
if (tr && fl) {
    var3 = 'Y';
} else {
    var3 = 'N';
}

gte(var1.nested, var2);